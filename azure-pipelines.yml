# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - main
  
pr:
  - main

pool: 'contabo'

variables:
  buildConfiguration: 'Release'
  solutionName: 'semantic-release.sln'

stages:
  - stage: Variables
    jobs:
      - job:
        steps:
          - script: |
              echo $PATH
              env | sort

  - stage: Feature_branch
    condition: ne(variables['System.PullRequest.SourceBranch'], '')
    jobs:
      - job: restore_solution
        displayName: Restore solution
        steps:
          - script: dotnet restore $solutionName

      - job: build_solution
        displayName: Build solution
        dependsOn: restore_solution
        steps:
          - script: dotnet build $solutionName

      - job: test_solution
        displayName: Test solution
        dependsOn: build_solution
        steps:
          - script: dotnet test $solutionName

  - stage: Feature_merged_to_main_branch
    condition: and(eq(variables['System.PullRequest.SourceBranch'], ''), eq(variables['Build.SourceBranch'],'refs/heads/main'))
    jobs:

      - job: restore_solution
        displayName: Restore solution
        steps:
          - script: dotnet restore $solutionName

      - job: build_solution
        dependsOn: restore_solution
        displayName: Build solution
        steps:
          - script: dotnet build $solutionName

      - job: test_solution
        dependsOn: build_solution
        displayName: Test solution
        steps:
          - script: dotnet test $solutionName

      - job: install_semantic
        dependsOn: test_solution
        displayName: Install Semantic
        steps:
          - script: |
              echo '##vso[task.prependpath]$(HOME)/.local/bin'
            displayName: PATH
          - script: |
              npm install npm@6
            displayName: npm@6
          - script: | 
              npm install semantic-release
            displayName: semantic-release
          - script: | 
              npm install @semantic-release/changelog
            displayName: semantic-release/changelog
          - script: |
              npm install @semantic-release/exec
            displayName: semantic-release/exec
          - script: |
              npm install @semantic-release/git
            displayName: semantic-release/git
          - script: |
              npm install @semantic-release/github
            displayName: semantic-release/github
          - script: |
              pip3 install --user bump2version
            displayName: bump2version

      - job:
        dependsOn: install_semantic
        displayName: Semantic Release
        steps:
          - script: |
              echo '##vso[task.prependpath]$(HOME)/.local/bin'
            displayName: PATH
          - script: |
              npx semantic-release
            displayName: semantic-release
            env:
              GH_TOKEN: $(githubToken)

  - stage: Main_is_tagged_and_create_and_publish_package
    condition: and(eq(variables['System.PullRequest.SourceBranch'], ''), ne(variables['Build.SourceBranch'],'refs/heads/main'))
    jobs:

      - job: release
        displayName: Release
        steps:
          - script: dotnet build $solutionName
#
#steps:
#  - task: DotNetCoreCLI@2
#    displayName: Restoring
#    inputs:
#      command: 'restore'
#      projects: 'semantic-release.sln'
#      feedsToUse: 'select'
#
#  - task: DotNetCoreCLI@2
#    displayName: Build - Debug
#    inputs:
#      command: 'build'
#      projects: 'semantic-release.sln'
#
#  - task: DotNetCoreCLI@2
#    displayName: Test
#    inputs:
#      command: 'test'
#      projects: 'semantic-release.sln'
#
#  - task: CmdLine@2
#    inputs:
#      script: 'npm install npm@6'
#
#  - script: |
#      which npm
#      which nodejs
#      npm install npm@6
#      npm install @semantic-release/changelog
#      npm install @semantic-release/exec
#      npm install @semantic-release/git
#      npm install @semantic-release/github
#      pip install --user bump2version